<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="metroTile8.TileImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABGdBTUEAALGPC/xhBQAABGZJREFUeF7t
        nE+IVVUcxyf/jbrIIMQoA8VNDCSWC0USIZncJG1aGEERiikhtHERhS4GxYUQSGIEzjqICEQ3EoGLKCKI
        iJBgiBYRI+JCIiJCxs/3nN+bejPv3nn3vXfPuee+84Evzjnvnt/v/H7ed+89f+6byGQymUwmk8lkMpn2
        srCw8Ahajdbob6vOFGHJ2o1m0C9oKb+jS+gAWmfNMiRDZ9hJ9A+qwjm00cyMJyTgOXRP2RiQf9ErZm68
        IPBTLgWj4WM0PtdJgj3rwh4tn6P2J5Eg33Dh1sMlc9NOCHCbj7NWps1duyAwPdfddiHWy19o0ty2B4J6
        wYUXhlPmtj0Q1Pc+tiD8jVaZ6/QhmEddWGF5xtynD8Hs8zEF5aS5Tx+CecfHFJRPzX36EMyHPqag3Db3
        6UMwsz6moNwx9+lDMB/5mIIyZ+7Th2BO+5iCcsPcpw/BHPIxBeV9c58+BLPFxxSUPea+HRDQvI8rGJWn
        /WmjZYUptLNAz6INdnhYcPw6CsVlc1sJ2l3xzUuZt8PDguO16E/Xhfp53NxWgnZf+eYrEmecjeOD3n+t
        nDZ3laFtsxMocP6J70MtfIsGntanbRIJXIW+dN0YLb+h9eZmIGjf/AQKOqC73TXXldHwMxp6jRgbaSRQ
        0AlN8Y9ihHIVrTGzQ4GdZiQQBzrD9iDNwsyhB0hrFcsWwal7Gt1CVdH2j11mZhHqDiP5kk+twWg7iLaM
        rLZDCuGYuAnEsM6qI6jsceUztOxaRd1W9B76AxVxH11Ey2abqVuPZLsItdWQsvAmw2fxEojRSdTvzUFn
        yEuoZzDUr0ObkZZBpSdQzxEA9fpPm0ay2Q/XUc+zkfo4CcSgNgj96ExX4yf0PKr86KE21lY2OiiJumwc
        RW+WaL+Z6YL6aAnUtoph0Nf2OHoKFXZOn6En0TG09KuubXErXufKoH34BGLsRW9zpPyKdD3TpiFJf6uu
        iBnrzlBgJ2wCMaS7rS7OMdHXdqgzrwN2gifwVW8vKl0biijr2vgW0g6wqrqL+uE86tW+TB+gHdZNDxVl
        jxyhOGHdcVDWfF5TuW/ddB3d7uuic8y65KCsXa+NxbrpOvqur4pOsgnUEK0JpJdA/tWooykkmcAdvtgI
        kkzgy77YCJJM4BlfbARLE7jLVzeTTie/8MVG0LWIRHkTqvrWUyhmO50sG5eG5jvXqf9BnYaYmh+sKi1K
        9YN23PZqX6b/Nr5T0Gxvk+geIg0IdsKMhc1Ik7iDHrPuDQw26k8gjTVYbyKaldFygq6BmuDV17hUFtIi
        1AVJoCY128KUheWgPNZn4CCET6DAQFMfE6oSLYF1bM2IQbQEvubtJE+0BOpO1wbiJFBg5IK3lTRRE6hn
        qR+cuXSJl0CBoQ3oG2cyTeImUGBMz4VvI72jmwoay2snRFciKN/Uh30w+h+3wKiGT3uRfhDnaxT6tYYy
        9Ns0euFb67l6c77nfkLqteFppWfc83Z4JpPJZDKZTCaTySTBxMRDRevU/Yu9eEIAAAAASUVORK5CYII=
</value>
  </data>
</root>